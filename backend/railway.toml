[build]
builder = "NIXPACKS"
buildCommand = "pip install -r requirements.txt"

[deploy]
startCommand = "./start.sh"
healthcheckPath = "/health"
healthcheckTimeout = 300
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 3

[env]
# Python/FastAPI Configuration
PYTHONPATH = "/app"
PYTHONUNBUFFERED = "1"

# Application Environment
ENVIRONMENT = { default = "production" }
DEBUG = { default = "false" }
API_VERSION = "v2"

# Authentication
CLERK_PUBLISHABLE_KEY = { required = true }
CLERK_SECRET_KEY = { required = true }

# OpenAI Integration
OPENAI_API_KEY = { required = true }
OPENAI_ORG_ID = { required = false }
OPENAI_MODEL = { default = "gpt-4o" }
OPENAI_MAX_TOKENS = { default = "4000" }
OPENAI_TEMPERATURE = { default = "0.7" }

# Firestore Configuration
FIREBASE_PROJECT_ID = { required = true }
FIREBASE_PRIVATE_KEY = { required = true }
FIREBASE_CLIENT_EMAIL = { required = true }
FIRESTORE_EMULATOR_HOST = { required = false }

# Redis Cache (Optional)
REDIS_URL = { required = false }
CACHE_TTL = { default = "3600" }

# File Storage
MAX_FILE_SIZE = { default = "10485760" }  # 10MB
ALLOWED_FILE_TYPES = { default = "md,txt,docx,pdf" }

# Rate Limiting
RATE_LIMIT_ENABLED = { default = "true" }
RATE_LIMIT_REQUESTS = { default = "100" }
RATE_LIMIT_WINDOW = { default = "3600" }

# Auto-completion Features
AUTO_COMPLETE_ENABLED = { default = "true" }
AUTO_COMPLETE_MAX_CHAPTERS = { default = "50" }
AUTO_COMPLETE_BATCH_SIZE = { default = "5" }

# Quality Assessment
QUALITY_ASSESSMENT_ENABLED = { default = "true" }
BRUTAL_ASSESSMENT_THRESHOLD = { default = "6.0" }

# Monitoring and Logging
LOG_LEVEL = { default = "INFO" }
SENTRY_DSN = { required = false }
PROMETHEUS_ENABLED = { default = "false" }

# Performance Settings
WORKER_PROCESSES = { default = "1" }
WORKER_CONNECTIONS = { default = "1000" }
KEEPALIVE_TIMEOUT = { default = "5" }

# CORS Settings
CORS_ORIGINS = { default = "https://book-writer-automated.vercel.app,http://localhost:3000" }
CORS_METHODS = { default = "GET,POST,PUT,DELETE,OPTIONS" }
CORS_HEADERS = { default = "Content-Type,Authorization" }

[services.database]
# PostgreSQL for advanced features (optional)
template = "postgresql"
name = "book-writer-db"

[services.redis]
# Redis for caching and sessions (optional)
template = "redis"
name = "book-writer-cache"

[healthcheck]
path = "/health"
interval = 30
timeout = 10
retries = 3

[metrics]
# Enable basic metrics collection
path = "/metrics"
enabled = true

[scaling]
minInstances = 1
maxInstances = 5
targetCPUPercent = 70
targetMemoryPercent = 80

# Temporary file storage
[[volumes]]
name = "temp-storage"
path = "/tmp/uploads"
size = "1GB"

# Model cache storage
[[volumes]]
name = "model-cache"
path = "/app/cache"
size = "2GB" 